name: Deploy Frontend to EKS


on:
  push:
    branches: ["main"]
    

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Chatbot Repo

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Build frontend
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies and build
        run: |
          npm install --legacy-peer-deps
          npm run build

      # Step 2: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Hardcoded region

      # Step 3: Login to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build & Push Docker image
      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=latest
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

      # Step 5: Update kubeconfig
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name Medcare-chatbot-02-cluster-v1

      #- name: Deploy to EKS
      - name: Deployed to EKS
        run: |
          IMAGE_TAG=latest
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          
          # Update deployment.yaml with the latest ECR image
          sed -i "s|image:.*|image: $IMAGE_URI|g" k8s/deployment.yaml
          
          # Apply all Kubernetes manifests to the correct namespace
          kubectl apply -f k8s/ --namespace=medical-app-frontend


# Multi-stage production Dockerfile
FROM node:22-alpine AS build

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --only=production

# Copy source files and build
COPY . .
RUN npm run build

# Production stage with Nginx
FROM nginx:1.25-alpine AS production

# Install curl for healthchecks
RUN apk add --no-cache curl

# Remove default nginx static assets
RUN rm -rf /usr/share/nginx/html/*

# Copy build output from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Add non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S medical-app -u 1001 -G nodejs

# Set permissions
RUN chown -R medical-app:nodejs /usr/share/nginx/html && \
    chown -R medical-app:nodejs /var/cache/nginx && \
    chown -R medical-app:nodejs /var/log/nginx && \
    chown -R medical-app:nodejs /etc/nginx/conf.d

# Create nginx pid directory
RUN mkdir -p /var/run/nginx && \
    chown -R medical-app:nodejs /var/run/nginx

# Switch to non-root user
USER medical-app

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]